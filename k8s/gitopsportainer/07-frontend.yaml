apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: url-shortener
  labels:
    app: frontend
    managed-by: portainer
data:
  nginx.conf: |
    server {
        listen 80;
        server_name localhost;

        root /usr/share/nginx/html;
        index index.html;

        # Serve static files only - API routing is handled by ingress
        location / {
            try_files $uri $uri/ /index.html;
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        }

        # Health check
        location /health {
            return 200 "OK";
            add_header Content-Type text/plain;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: url-shortener
  labels:
    app: frontend
    managed-by: portainer
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: itsbaivab/url-shortener-frontend:latest
          ports:
            - containerPort: 80
              name: http
          volumeMounts:
            - name: frontend-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: frontend-config
          configMap:
            name: frontend-config
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: url-shortener
  labels:
    app: frontend
    managed-by: portainer
spec:
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
      name: http
      nodePort: 30081
  type: NodePort
---

